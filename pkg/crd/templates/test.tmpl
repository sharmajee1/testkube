apiVersion: tests.testkube.io/v3
kind: Test
metadata:
  name: {{ .Name }}
  namespace: {{ .Namespace }}
  {{- if ne (len .Labels) 0 }}
  labels:
  {{- range $key, $value := .Labels }}
    {{ $key }}: {{ $value }}
  {{- end }}
  {{- end }}
spec:
  {{- if .Type_ }}
  type: {{ .Type_ }}
  {{- end }}
  {{- if .Content }}
  content:
    {{- if .Content.Type_ }}
    type: {{ .Content.Type_ }}
    {{- end }}
    {{- if .Content.Repository }}
    repository:
      {{- if .Content.Repository.Type_ }}
      type: {{ .Content.Repository.Type_ }}
      {{- end }}
      {{- if .Content.Repository.Uri }}
      uri: {{ .Content.Repository.Uri }}
      {{- end }}
      {{- if .Content.Repository.Branch }}
      branch: {{ .Content.Repository.Branch }}
      {{- end }}
      {{- if .Content.Repository.Commit }}
      commit: {{ .Content.Repository.Commit }}
      {{- end }}
      {{- if .Content.Repository.Path }}
      path: {{ .Content.Repository.Path }}
      {{- end }}
      {{- if .Content.Repository.UsernameSecret }}
      usernameSecret:
        {{- if .Content.Repository.UsernameSecret.Name }}
        name: {{ .Content.Repository.UsernameSecret.Name }}
        {{- end }}
        {{- if .Content.Repository.UsernameSecret.Key }}
        key: {{ .Content.Repository.UsernameSecret.Key }}
        {{- end }}
      {{- end }}
      {{- if .Content.Repository.TokenSecret }}
      tokenSecret:
        {{- if .Content.Repository.TokenSecret.Name }}
        name: {{ .Content.Repository.TokenSecret.Name }}
        {{- end }}
        {{- if .Content.Repository.TokenSecret.Key }}
        key: {{ .Content.Repository.TokenSecret.Key }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- if .Content.Data }}
    data: {{ .Content.Data }}
    {{- end }}
    {{- if .Content.Uri }}
    uri: {{ .Content.Uri }}
    {{- end }}
  {{- end }}
  {{- if .Source }}
  source: {{ .Source }}
  {{- end }}  
  {{- if .Schedule }}
  schedule: {{ .Schedule }}
  {{- end }}
  {{- if .ExecutionRequest }}
  {{- if or (.ExecutionRequest.Name) (.ExecutionRequest.VariablesFile) (.ExecutionRequest.HttpProxy) (.ExecutionRequest.HttpsProxy) (ne (len .ExecutionRequest.Variables) 0) (ne (len .ExecutionRequest.Args) 0) (ne (len .ExecutionRequest.Envs) 0) (ne (len .ExecutionRequest.SecretEnvs) 0) }}
  executionRequest:
    {{- if .ExecutionRequest.Name }}
    name: {{ .ExecutionRequest.Name }}
    {{- end }}
    {{- if .ExecutionRequest.VariablesFile }}
    variablesFile: {{ .ExecutionRequest.VariablesFile }}
    {{- end }}
    {{- if ne (len .ExecutionRequest.Variables) 0 }}
    variables:
    {{- range $key, $value := .ExecutionRequest.Variables }}
    - name: {{ $key }}
      {{- if $value.Value }}
      value: {{ $value.Value }}
      {{- end }}
      {{- if $value.Type_ }}
      type: {{ $value.Type_ }}
      {{- end }}
      {{- if $value.SecretRef }}
      secretRef:
        {{- if $value.SecretRef.Namespace }}
        namespace: {{ $value.SecretRef.Namespace }}
        {{- end }}
        {{- if $value.SecretRef.Name }}
        name: {{ $value.SecretRef.Name }}
        {{- end }}
        {{- if $value.SecretRef.Key }}
        key: {{ $value.SecretRef.Key }}
        {{- end }}
      {{- end }}
    {{- end }}
    {{- end }}
    {{- if ne (len .ExecutionRequest.Args) 0 }}
    args:
    {{- range .ExecutionRequest.Args }}
      - {{ . }}
    {{- end }}
    {{- end }}
    {{- if ne (len .ExecutionRequest.Envs) 0 }}
    envs:
    {{- range $key, $value := .ExecutionRequest.Envs }}
      {{ $key }}: {{ $value }}
    {{- end }}
    {{- end }}
    {{- if ne (len .ExecutionRequest.SecretEnvs) 0 }}
    secretEnvs:
    {{- range $key, $value := .ExecutionRequest.SecretEnvs }}
      {{ $key }}: {{ $value }}
    {{- end }}
    {{- end }}
    {{- if .ExecutionRequest.HttpProxy }}
    httpProxy: {{ .ExecutionRequest.HttpProxy }}
    {{- end }}
    {{- if .ExecutionRequest.HttpsProxy }}
    httpsProxy: {{ .ExecutionRequest.HttpsProxy }}
    {{- end }}
  {{- end }}
  {{- end }}
